
[project]
name = "wet-toast-talk-radio"
version = "0.1.0"
description = ""
authors = [
    { name = "camille-vanhoffelen", email = "camille-vanhoffelen@users.noreply.github.com" },
    { name = "raphael-vanhoffelen", email = "dskart11@gmail.com" },
]
dependencies = [
    "suno-bark @ git+https://github.com/suno-ai/bark.git",
    "nltk>=3.8.1",
    "structlog>=23.1.0",
    "click>=8.1.3",
    "pydantic>=1.10.8",
    "pydub>=0.25.1",
    "wave>=0.0.2",
    "langchain>=0.0.191",
    "openai>=0.27.7",
    "boto3>=1.26.146",
    "python-shout>=0.2.8",
    "torch>=2.0.1",
    "torchaudio>=2.0.2",
]
requires-python = ">=3.10"
readme = "README.md"
license = { text = "MIT" }

[project.optional-dependencies]
ide = ["setuptools>=67.8.0"]

[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = ["wet_toast_talk_radio"]

[tool.pdm.dev-dependencies]
lint = [
    "black>=23.3.0",
    "ruff>=0.0.270",
]
test = [
    "pytest>=7.3.1",
    "hypothesis>=6.76.0",
]
dev = []

[tool.pdm.scripts]
disc-jockey = "python -m wet_toast_talk_radio.main disc-jockey"
audio-generator = "python -m wet_toast_talk_radio.main audio-generator"
scriptwriter = "python -m wet_toast_talk_radio.main scriptwriter"
local-setup = "python -m wet_toast_talk_radio.media_store.data.load_store"

[tool.pytest.ini_options]
markers = [
    "integration: mark test as an integration test",
]
